package dev.virtualpatch.allapplications;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.util.Log;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.List;

public class MainActivity extends AppCompatActivity {
    @SuppressLint("SoonBlockedPrivateApi")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        try {
            Class ApplicationPackageManager = Class.forName("android.app.ApplicationPackageManager");
            Log.d("REFLECTION", "ApplicationPackageManager found");
            Field mPM = ApplicationPackageManager.getDeclaredField("mPM");
            mPM.setAccessible(true);
            Log.d("REFLECTION", "mPM found");
            Object obj = mPM.get(getPackageManager());
            Log.d("REFLECTION", "mPM type: " + obj.getClass().getName());
            for(Method m : obj.getClass().getDeclaredMethods()) {
                Log.d("REFLECTION", m.getName());
            }
            Class IPackageManager = Class.forName("android.content.pm.IPackageManager");
            Method getAllPackages = IPackageManager.getDeclaredMethod("getAllPackages");
            Log.d("REFLECTION", "getAllPackages found");
            List<String> packages = (List<String>) getAllPackages.invoke(obj);
            Log.d("REFLECTION", "found " + packages.toArray().length + " packages");
            for(String p: packages) {
                Log.d("REFLECTION", "package: " + p);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}